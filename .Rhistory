library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(plyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
install.packages('arules')
install.packages('arulesViz')
install.packages("arulesViz")
install.packages('tidyverse')
install.packages
install.packages('readxl')
install.packages('knitr')
install.packages('ggplot2')
install.packages('plyr')
install.packages('magrittr')
install.packages
install.packages('dplyr')
install.packages('RColorBrewer')
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(plyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
library(arules)
source("~/.active-rstudio-document")
library(arules)
library(arulesViz)
library(tidyverse)
rm(list=ls())
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(knitr)
library(ggplot2)
library(plyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
itemslist=itemslist[complete.cases(itemslist),]
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
td$BillNo=NULL
td$Date=NULL
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
transactions=read.transactions('data1.csv',format='basket',sep=',')
summary(transactions)
itemFrequencyPlot(transactions,topN=20,type='absolute',col=brewer.pal(8,'Pastel2'),main='Absolute Item Frequency Plot')
generated.rules=apriori(transactions,parameter=list(supp=0.001,conf=0.8,maxlen=10))
generated.rules=sort(generated.rules,by='confidence',decreasing=TRUE)
summary(generated.rules)
inspect(generated.rules[1:10])
r=generated.rules[quality(generated.rules)$confidence>0.6]
plot(r)
top10rules=head(generated.rules,10, by='confidence',lbls=)
plot(top10rules)
plot(r, engine="plotly")
plot(top10rules, engine="plotly")
itemFrequencyPlot(transactions,topN=20,type='absolute',col=brewer.pal(8,'Pastel2'),main='Absolute Item Frequency Plot')
generated.rules=apriori(transactions,parameter=list(supp=0.001,conf=0.8,maxlen=10))
generated.rules=sort(generated.rules,by='confidence',decreasing=TRUE)
summary(generated.rules)
inspect(generated.rules[1:10])
r=generated.rules[quality(generated.rules)$confidence>0.6]
plot(r)
top10rules=head(generated.rules,10, by='confidence',lbls=)
plot(top10rules)
plot(r, engine="plotly")
plot(top10rules, engine="plotly")
outliers= subset(rules, support < 0.005 | confidence < 0.6)
outliers= subset(r, support < 0.005 | confidence < 0.6)
summary(outliers)
#outliers
infrequent_itemsets <- generated.rules[quality(generated.rules)$support < 0.01]
infrequent_itemset_freq <- sapply(itemLabels(infrequent_itemsets), function(x) sum(is.subset(x, transactions)))
#outliers
infrequent_itemsets <- generated.rules[quality(generated.rules)$support < 0.01]
# Extract the frequencies of infrequent itemsets
infrequent_itemset_labels <- itemLabels(infrequent_itemsets)
infrequent_itemset_freq <- sapply(infrequent_itemset_labels, function(x) sum(itemFrequency(transactions)[x]))
# Create a boxplot of infrequent itemset frequencies
boxplot(infrequent_itemset_freq, main = "Infrequent Itemset Frequencies Boxplot")
#outliers
itemset_freq <- itemFrequency(transactions)
# Create a boxplot of itemset frequencies
boxplot(itemset_freq, main = "Itemset Frequencies Boxplot")
#outliers
rule_support <- quality(generated.rules)$support
# Create a boxplot of rule support values
boxplot(rule_support, main = "Support Values of Association Rules Boxplot")
summary(rule_support)
View(td)
library(arules)
library(arulesViz)
library(tidyverse)
library(readxl)
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
itemslist=itemslist[complete.cases(itemslist),]
td$BillNo=NULL
td$Date=NULL
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
rm(list=ls())
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
View(itemslist)
itemslist=itemslist[complete.cases(itemslist),]
View(itemslist)
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
View(td)
td$BillNo=NULL
td$Date=NULL
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
transactions=read.transactions('data1.csv',format='basket',sep=',')
View(transactions)
View(transactions)
summary(transactions)
rm(list=ls())
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
View(itemslist)
View(itemslist)
itemslist=itemslist[complete.cases(itemslist),]
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
View(td)
td$BillNo=NULL
td$Date=NULL
View(td)
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
transactions=read.transactions('data1.csv',format='basket',sep=',')
View(transactions)
View(transactions@itemInfo)
View(transactions@itemsetInfo)
summary(transactions)
View(transactions)
View(transactions)
transactions@data@Dim
transactions@data@i
transactions@data@p
transactions@data
boxplot(transactions)
boxplot(transactions@data)
boxplot(transactions@data@p)
boxplot(transactions@data@i)
ii=itemFrequency(transactions)
boxplot(ii)
summary(ii)
print(ii)
summary(transactions)
x=summary(transactions)
eld=x$items
View(x)
boxplot(x.lengths)
boxplot(x$lengths)
boxplot(x@lengths)
boxplot(ylab=x@lengths)
boxplot(xlab=c(1:419),ylab=x@lengths)
boxplot(x@itemInfo)
boxplot(x@lengthSummary)
boxplot(x@lengths)
boxplot(t(x@lengths))
z=x@lengths
print(z)
print(t(z))
print(IQR(transactions))
print(IQR(transactions@itemInfo))
IQR(transactions@itemInfo)
x=summary(transactions)
summary(transactions)
z=x@itemSummary
iqr(z)
IQR(z)
boxplot(z)
IQR(z)
summary(transactions)
itemFrequencyPlot(transactions,topN=20,type='absolute',col=brewer.pal(8,'Pastel2'),main='Absolute Item Frequency Plot')
generated.rules=apriori(transactions,parameter=list(supp=0.001,conf=0.8,maxlen=10))
generated.rules=sort(generated.rules,by='confidence',decreasing=TRUE)
summary(generated.rules)
inspect(generated.rules[1:10])
r=generated.rules[quality(generated.rules)$confidence>0.6]
plot(r)
top10rules=head(generated.rules,10, by='confidence',lbls=)
plot(top10rules)
plot(r, engine="plotly")
#outliers
rule_support <- quality(generated.rules)$support
summary(rule_support)
boxplot(rule_support, main = "Support Values of Association Rules Boxplot")
plot(r, engine="plotly")
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
itemslist=itemslist[complete.cases(itemslist),]
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
td$BillNo=NULL
td$Date=NULL
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
transactions=read.transactions('data1.csv',format='basket',sep=',')
summary(transactions)
x=summary(transactions)
z=x@itemSummary
IQR(z)
itemFrequencyPlot(transactions,topN=20,type='absolute',col=brewer.pal(8,'Pastel2'),main='Absolute Item Frequency Plot')
generated.rules=apriori(transactions,parameter=list(supp=0.001,conf=0.8,maxlen=10))
generated.rules=sort(generated.rules,by='confidence',decreasing=TRUE)
summary(generated.rules)
inspect(generated.rules[1:10])
r=generated.rules[quality(generated.rules)$confidence>0.6]
plot(r)
rm(list=ls())
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
itemslist=itemslist[complete.cases(itemslist),]
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
td$BillNo=NULL
td$Date=NULL
colnames(td)=c("items")
write.csv(td,'data1.csv',quote=FALSE,row.names = FALSE)
transactions=read.transactions('data1.csv',format='basket',sep=',')
summary(transactions)
x=summary(transactions)
z=x@itemSummary
IQR(z)
itemFrequencyPlot(transactions,topN=20,type='absolute',col=brewer.pal(8,'Pastel2'),main='Absolute Item Frequency Plot')
generated.rules=apriori(transactions,parameter=list(supp=0.001,conf=0.8,maxlen=10))
generated.rules=sort(generated.rules,by='confidence',decreasing=TRUE)
summary(generated.rules)
inspect(generated.rules[1:10])
r=generated.rules[quality(generated.rules)$confidence>0.6]
plot(r)
top10rules=head(generated.rules,10, by='confidence',lbls=)
plot(top10rules)
plot(r, engine="plotly")
plot(top10rules, engine="plotly")
#outliers
rule_support <- quality(generated.rules)$support
summary(rule_support)
rm(list =ls())
library(arules)
library(arulesViz)
library(readxl)
library(ggplot2)
library(plyr)
library(RColorBrewer)
itemslist=read_excel('data.xlsx')
View(itemslist)
View(itemslist)
itemslist=itemslist[complete.cases(itemslist),]
td=ddply(itemslist,c("BillNo","Date"),function(df1)paste(df1$Itemname,collapse=","
))
td$BillNo=NULL
td$Date=NULL
source("C:/Users/achuh/OneDrive/VIT/SEM 4/EDA/Project/jcomponent/project.R")
source("C:/Users/achuh/OneDrive/VIT/SEM 4/EDA/Project/jcomponent/project.R")
source("C:/Users/achuh/OneDrive/VIT/SEM 4/EDA/Project/jcomponent/project.R")
source("C:/Users/achuh/OneDrive/VIT/SEM 4/EDA/Project/jcomponent/project.R")
# Step 2: Preprocess the data
itemslist=itemslist[complete.cases(itemslist),]
transactions <- as(split(itemslist$Itemname, itemslist$BillNo), "transactions")
# Check the class of the transactions object
class(transactions)
items <- sample(transactions@itemInfo$labels, 100)
ar <- apriori(transactions,
parameter = list(
support = 0.001,
confidence = 0.8,
maxlen = 10
))
# Build UI.
ui <- fluidPage(titlePanel("Market Basket"),
sidebarLayout(
sidebarPanel(
br(),
strong("Cart Item(s)"),
checkboxGroupInput(
"items",
label = "",
choices = items,
selected = sample(items, 3)
)
),
mainPanel(
br(),
br(),
strong("Frequently Bought With: "),
tableOutput("recommendations"),
br(),
plotOutput("rulegraph")
)
))
server <- function(input, output) {
recos <- reactive({
subs <- subset(ar,
subset = lhs %in% input$items)
s <- sort(subs, by = "confidence")
head(s)
})
output$recommendations <- renderTable({
# tryCatch(
#  expr = {
recs <- data.frame()
r <- recos()
if (length(r) < 5) {
recs <- r
} else {
recs <- r[1:5,]
}
recs <- unique(rhs(sort(recs, by = "lift")))
inspect(recs)
#},
#error = function(error) {
#   msg <- data.frame(msg = "Please Select an item!")
#    colnames(msg) <- NULL
#     msg
#    }
#)
})
output$rulegraph <- renderPlot({
plot(recos(), method = "graph")
})
}
shinyApp(ui, server)
